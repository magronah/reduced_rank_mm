
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(tibble)
> library(DESeq2)
Loading required package: S4Vectors
Loading required package: stats4
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, aperm, append, as.data.frame, basename, cbind,
    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,
    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,
    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,
    Position, rank, rbind, Reduce, rownames, sapply, saveRDS, setdiff,
    table, tapply, union, unique, unsplit, which.max, which.min


Attaching package: ‘S4Vectors’

The following object is masked _by_ ‘.GlobalEnv’:

    metadata

The following object is masked from ‘package:utils’:

    findMatches

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges
Loading required package: GenomicRanges
Loading required package: GenomeInfoDb
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

> library(Matrix)

Attaching package: ‘Matrix’

The following object is masked from ‘package:S4Vectors’:

    expand

> library(huge)
> library(foreach)
> 
> source("/project/6006158/agronahm/reduced_rank_mm/func2.R")
> source("/project/6006158/agronahm/reduced_rank_mm/initial_param0.R")
Generating data from the multivariate normal distribution with the scale-free graph structure....done.
Generating data from the multivariate normal distribution with the scale-free graph structure....done.
> ############################################################
> # Define sets of nsubj and ntaxa
> parameter_sets <- list(
+   #list(nsubj = 50, ntaxa = 200),
+   list(nsubj = 100, ntaxa = 300),
+   list(nsubj = 150, ntaxa = 500)
+ )
> 
> # Loop through parameter sets
> for (params in parameter_sets) {
+   
+   nsubj <- params$nsubj
+   ntaxa <- params$ntaxa
+   
+   path = paste0("~/scratch/dataset/RR","/",nsubj,"_",ntaxa,"/deseq")
+   
+   files   =   list.files(path, full.names = TRUE)
+   res = foreach(i = files, .combine = "cbind") %do% {
+     res        =    readRDS(i)
+     res$padj
+   }
+   
+   dd            =    as.data.frame(res)
+   colnames(dd)  =    paste0("nsim", 1:ncol(dd))
+   rownames(dd)  =    paste0("taxon",1:ntaxa)
+   
+   # Create output directory if it doesn't exist
+   path2 <- paste0("/project/6006158/agronahm/reduced_rank_mm/", nsubj, "_", ntaxa, "/")
+ 
+   file_path <- paste0(path2, "pvalues/")
+   if (!dir.exists(file_path)) {
+     dir.create(file_path, recursive = TRUE)
+     cat("Folder created at:", file_path, "\n")
+   } else {
+     cat("Folder already exists at:", file_path, "\n")
+   }
+   
+   saveRDS(dd, file = paste0(file_path,"deseq.rds"))
+   
+ }
